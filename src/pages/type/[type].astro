---
type Unit = {
  slug: string;
  title: string;
  type: string;
  image: string;
  counterpart?: string;
  description: string;
  metalCost: number;
  energyCost: number;
  buildTime: number;
  health: number;
  sightRange: number;
  speed: number;
  weapons: string;
  dps: number;
  weaponRange: number;
  techLevel: number;
};

import Navbar from '../../components/Navbar.astro';
import FactionHeading from '../../components/FactionHeading.astro';

// ✅ getStaticPaths
export async function getStaticPaths() {
  const allUnits = import.meta.glob<{ frontmatter: Unit }>('../../pages/units/*.md', { eager: true });
  const units = Object.values(allUnits).map(u => u.frontmatter);
  const uniqueTypes = [...new Set(units.map(u => u.type.toLowerCase()))];
  
  return uniqueTypes.map(type => ({
    params: { type }
  }));
}

// ✅ get units for this page
const allUnits = import.meta.glob<{ frontmatter: Unit }>('../../pages/units/*.md', { eager: true });
const units = Object.values(allUnits).map(u => u.frontmatter);

const { type } = Astro.params;
const typeCapitalized = type.charAt(0).toUpperCase() + type.slice(1);

const filteredUnits = units
.filter(u => u.type.toLowerCase() === type.toLowerCase())
.sort((a, b) => a.metalCost - b.metalCost);
---

<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <style>
    .unit-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: 0.75rem;
      justify-items: center;
    }
    
    .unit-card {
      background-color: #1a1a1a;
      padding: 0rem;
      border-radius: 10px;
      transition: transform 0.2s ease;
      width: 100%;
      max-width: 200px;
    }
    
    .unit-card:hover {
      transform: scale(1.05);
    }
    
    .unit-card img {
      width: 100%;
      height: auto;
      display: block;
      border-radius: 8px;
    }
  </style>
</head>

<body style="font-family: sans-serif; background-color: #111; color: #eee; margin: 0;">
  
  <div style="padding: 2rem; max-width: 1200px; margin: 0 auto;">
    <FactionHeading faction="Legion" type={typeCapitalized} />
    <Navbar activeType={typeCapitalized} />   
    {filteredUnits.length === 0 ? (
      <p style="text-align: center;">No units found for this type.</p>
      ) : (
      <div class="unit-grid">
        {filteredUnits.map(unit => (
          <a href={`/units/${unit.slug}`} class="unit-card">
            <img src={unit.image} alt={unit.title} />
          </a>
          ))}
        </div>
        )}
      </div>
    </body>
    </html>
    